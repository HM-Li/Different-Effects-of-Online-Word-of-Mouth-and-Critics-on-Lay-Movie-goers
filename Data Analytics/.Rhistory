View(model.centers)
o <- order(model.kmeans.pred$cluster)
user.model.clst <- cbind(user.model.clst[o], model.kmeans.pred$cluster[o])
sum(user.model.clst$cluster_2!=user.model.clst$V2)
user.model.clst <- user.model.clst[,-length(user.model.clst)]
user.model.clst <- cbind(user.model, model.kmeans$cluster)
colnames(user.model.clst)[20] <- "cluster"
user.model.clst$cluster <- as.factor(user.model.clst$cluster)
o <- order(model.kmeans.pred$cluster)
user.model.clst <- cbind(user.model.clst[o], model.kmeans.pred$cluster[o])
colnames(user.model.clst)[21] <- "cluster_2"
user.model.clst$cluster <- as.factor(user.model.clst$cluster_2)
subset(user.model.clst,user.model.clst$cluster_2 == 1&user.model.clst$cr>0)
subset(user.model.clst,user.model.clst$cluster_2 == 1&user.model.clst$cr<0)
subset(user.model.clst,user.model.clst$cluster_2 == 2&user.model.clst$cr<0)
subset(user.model.clst,user.model.clst$cluster_2 == 2&user.model.clst$cr>0)
subset(user.model.clst,user.model.clst$cluster_2 == 2&user.model.clst$cr>0.5)
subset(user.model.clst,user.model.clst$cluster_2 == 2&user.model.clst$cr<0.5)
subset(user.model.clst,user.model.clst$cluster_2 == 1&user.model.clst$cr<0.5)
<
subset(user.model.clst,user.model.clst$cluster_2 == 1&user.model.clst$cr>0.5)
model.centers <- as.data.frame(t(model.centers))
View(model.centers)
movielist <- fread(file.path(path.output,"movieinfo_sample_2.csv"))
movielist <- fread(file.path(path.input,"movieinfo_sample_2.csv"))
movieid <- fread(file.path(path.input,"movieID.csv"))
moviegenre <- fread(file.path(path.input,"movieGenre.csv"))
movielist <- movielist[,-c(2,3)]
movielist <- movielist[,-c(2)]
model.centers <- cbind(movieid, model.centers)
model.centers <- model.kmeans.pred$centers
model.centers <- as.data.frame(t(model.centers))
model.centers <- cbind(movielist, model.centers)
movieinfo <- left_join(movielist, movieid, by = "MID")
movieinfo <- left_join(movieinfo, moviegenre, by = "mlID")
sum(duplicated(cbind(movieinfo$MID, movieinfo$genre)))
movieinfo <- unique(movieinfo, by = c("MID","genre"))
sum(duplicated(cbind(movieinfo$MID, movieinfo$genre)))
movieinfo <- left_join(movielist, movieid, by = "MID")
movieinfo <- left_join(movieinfo, moviegenre, by = "mlID")
movieinfo <- movieinfo[duplicated(cbind(movieinfo$MID, movieinfo$genre)),]
movieinfo <- left_join(movielist, movieid, by = "MID")
movieinfo <- left_join(movieinfo, moviegenre, by = "mlID")
movieinfo <- movieinfo[!duplicated(cbind(movieinfo$MID, movieinfo$genre)),]
sum(duplicated(cbind(movieinfo$MID, movieinfo$genre)))
write.csv(movieinfo, file.path(path.output,"movie_sample_genreinfo.csv"),row.names = F)
movieinfo.short <- movieinfo[,-c(2,3)]
rm(movieinfo)
model.centers <- left_join(model.centers, movieinfo.short, by = "MID")
model.centers.aggr <- aggregate(model.centers$genre~model.centers$`1`+model.centers$`2`, FUN = mean)
View(model.centers.aggr)
model.centers.aggr <- aggregate(model.centers$`1`+model.centers$`2`~model.centers$genre, FUN = mean)
View(model.centers.aggr)
model.centers.aggr <- aggregate(cbind(model.centers$`1`,model.centers$`2`)~model.centers$genre, FUN = mean)
View(model.centers.aggr)
write.csv(model.centers.aggr, file.path(path.output, "model_centers_genre.csv"),row.names = F)
write.csv(model.centers, file.path(path.output, "model_centers.csv"),row.names = F)
mean(model.centers$`1`)
mean(model.centers$`2`)
colnames(model.centers.aggr)[1] <- "genre"
model.centers.aggr[-order(model.centers.aggr$V1),][1:10][[genre]]
order(model.centers.aggr$V1)
model.centers.aggr[-order(model.centers.aggr$V1),]
model.centers.aggr[order(-model.centers.aggr$V1),][1:10][[genre]]
model.centers.aggr[order(-model.centers.aggr$V1),]
model.centers.aggr[order(-model.centers.aggr$V1),][1:10]
model.centers.aggr[order(-model.centers.aggr$V1),][[genre]]
model.centers.aggr[order(-model.centers.aggr$V1),][["genre"]]
plot <- ggplot(model.centers.aggr, aes(x = genre, y = V1))
plot
model.centers.aggr$genre <- as.factor(model.centers.aggr$genre)
plot <- ggplot(model.centers.aggr, aes(x = genre, y = V1))
plot
plot <- ggplot(model.centers.aggr, aes(x = genre, y = V1))+
geom_bar()
plot
plot <- ggplot(model.centers.aggr, aes(x = genre, y = V1))+
geom_point()
plot
plot <- ggplot(model.centers.aggr[order(-model.centers.aggr$V1),], aes(x = genre, y = V1))+
geom_point()
plot
model.centers.aggr[order(-model.centers.aggr$V2),][["genre"]]
model.centers.aggr[order(-model.centers.aggr$V1),][["genre"]]
sample(1:28, size = 2)
sample(1:27, size = 2)
sample(1:27, size = 2)
sample(1:28, size = 6)
sample(1:28, size = 6)
save.image("D:/MicFile/百度云同步盘/R_Workspace/GraduateProject/DataAnalysis/cluster_ws.RData")
library(data.table)
library(Hmisc)
library(dplyr)
library(tidyr)
library(VIM)
library(reshape2)
path.wd <- getwd()
path.input <- file.path(path.wd,"Input")
path.output <- file.path(path.wd,"Output")
ar.rate<- fread(file.path(path.input,"ar_rate_8_input.csv"))
describe(ar.rate$Rate)
ar.rate.wtsni <- subset(ar.rate, ar.rate$Rate>-3&ar.rate$Rate<0)
describe(ar.rate.wtsni$Rate)
describe(ar.rate.wtsni$SR)
sample(1:16,size = 6)
save.image("D:/MicFile/百度云同步盘/R_Workspace/GraduateProject/DataAnalysis/parameterinsight_2.RData")
load("D:/MicFile/百度云同步盘/R_Workspace/GraduateProject/DataAnalysis/arVScr_overall.R")
load("D:/MicFile/百度云同步盘/R_Workspace/GraduateProject/DataAnalysis/2.RData")
anova.test(ar.rate.add$cr)
library(data.table)
library(Hmisc)
library(dplyr)
library(tidyr)
library(VIM)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(caret)
anova(ar.rate.add$cr~ar.rate.add$pr_SR)
aov(ar.rate.add$cr~ar.rate.add$pr_SR)
summary(aov(ar.rate.add$cr~ar.rate.add$pr_SR))
sr.anova <- aov(user.info$cr~user.info$pr_SR)
summary(sr.anova)
summary(aov(ar.rate.add$cr~ar.rate.add$SR))
ar.anova <- aov(ar.rate.add$ar~ar.rate.add$pr_SR)
summary(ar.anova)
ar.anova <- aov(user.info$ar~user.info$pr_SR)
summary(ar.anova)
sr.anova <- aov(user.info$cr~user.info$Frequent)
summary(sr.anova)
ar.anova <- aov(user.info$ar~user.info$Frequent)
summary(ar.anova)
sr.anova <- aov(user.info$cr~user.info$normflag_2)
summary(sr.anova)
ar.anova <- aov(user.info$ar~user.info$normflag_2)
summary(ar.anova)
ar_cr.sub.sr <- melt(data.frame(ar_index = user.info.normmind$ar, cr_index = user.info.normmind$cr, mf_index = user.info.normmind$mf_index))
plot <- ggplot(ar_cr.sub.sr,aes(x = factor(variable), y=value))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "AR指数 CR指数 MF指数", y = "数值分布") +
ggtitle("三指数分布对比",element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plo
library(data.table)
library(Hmisc)
library(dplyr)
library(tidyr)
library(VIM)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(caret)
ar_cr.sub.sr <- melt(data.frame(ar_index = user.info.normmind$ar, cr_index = user.info.normmind$cr, mf_index = user.info.normmind$mf_index))
plot <- ggplot(ar_cr.sub.sr,aes(x = factor(variable), y=value))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "AR指数 CR指数 MF指数", y = "数值分布") +
ggtitle("三指数分布对比",element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot
plot <- ggplot(user.info,aes(x = factor(user.info$pr_SR), y=user.info$ar))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "AR指数 CR指数 MF指数", y = "数值分布") +
ggtitle("三指数分布对比",element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot
plot <- ggplot(user.info,aes(x = factor(user.info$pr_SR), y=user.info$ar))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "iSR vs. SR ", y = "ar数值分布") +
ggtitle(element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot
plot <- ggplot(user.info,aes(x = factor(user.info$pr_SR), y=user.info$cr))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "iSR vs. SR ", y = "cr数值分布") +
ggtitle(element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot
plot <- ggplot(user.info,aes(x = factor(user.info$Frequent), y=user.info$ar))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "ifM vs. fM ", y = "ar数值分布") +
ggtitle(element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot
plot <- ggplot(user.info,aes(x = factor(user.info$Frequent), y=user.info$cr))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "ifM vs. fM ", y = "cr数值分布") +
ggtitle(element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot
plot <- ggplot(user.info,aes(x = factor(user.info$normflag_2), y=user.info$ar))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "iNormal vs. Normal", y = "ar数值分布") +
ggtitle(element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot
plot <- ggplot(user.info,aes(x = factor(user.info$normflag_2), y=user.info$cr))
plot <- plot +
geom_violin(trim = F)+
geom_boxplot(width = 0.1, fill = "black")+
stat_summary(fun.y="mean", geom="point", shape=21, size=2.5, fill="white")+
labs(x = "iNormal vs. Normal", y = "cr数值分布") +
ggtitle(element_text(size=30)) +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot
describe(user.info$normflag_2)
user.info.sr <- subset(user.info, user.info$pr_SR == 1)
user.info.isr <- subset(user.info, user.info$pr_SR == 0)
user.info.fm <- subset(user.info, user.info$Frequent == 1)
user.info.ifm <- subset(user.info, user.info$Frequent == 0)
t.test(user.info.sr$cr, user.info.sr$ar)
t.test(user.info.isr$cr, user.info.isr$ar)
user.info.inormmind <- subset(user.info, user.info$normflag_2 == 0)
user.info.normmind <- subset(user.info, user.info$normflag_2 == 1)
t.test(user.info.fm$cr, user.info.fm$ar)
t.test(user.info.ifm$cr, user.info.ifm$ar)
t.test(user.info.normmind$cr, user.info.normmind$ar)
t.test(user.info.inormmind$cr, user.info.inormmind$ar)
rm(lm.5)
rm(lm.5_5)
gc()
library(data.table)
library(Hmisc)
library(dplyr)
library(tidyr)
library(VIM)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(caret)
path.wd <- getwd()
path.input <- file.path(path.wd,"Input")
path.output <- file.path(path.wd,"Output")
ar.rate <- fread(file.path(path.input,"AR_table_input.csv"))
sample(1:1579439,3000)
ar.rate.sample <- ar.rate[sample(1:1579439,3000),]
lm.3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore_10+Tomatometer_10,ar.rate.sample)
lm.3_3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg_2+cr_avg,ar.rate.sample)
summary(lm.3_3)
lm.4 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample)
lm.4_4 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std+SR,ar.rate.sample)
summary(lm.4_4)
summary(lm.4)
lm.5 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample)
summary(lm.5)
lm.5_5 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std+SR,ar.rate.sample)
summary(lm.5_5)
rm(ar.rate)
rm(ar.rate.sample)
ar.rate <- fread(file.path(path.output,"ra_rate_lm.csv"))
ar.rate.sample <- ar.rate[sample(1:1579439,3000),]
lm.3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore_10+Tomatometer_10,ar.rate.sample)
lm.3_3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg_2+cr_avg,ar.rate.sample)
summary(lm.3_3)
lm.4 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample)
lm.4_4 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std+SR,ar.rate.sample)
summary(lm.4_4)
summary(lm.4)
lm.5 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample)
summary(lm.5)
lm.5_5 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std+SR,ar.rate.sample)
summary(lm.5_5)
ar.rate.sample <- ar.rate[sample(1:1579439,5000),]
rm(lm.3,lm.3_3,lm.4,lm.4_4,lm.5,lm.5_5)
lm.3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore_10+Tomatometer_10,ar.rate.sample)
lm.3_3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg_2+cr_avg,ar.rate.sample)
summary(lm.3_3)
lm.4 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample)
lm.4_4 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std+SR,ar.rate.sample)
summary(lm.4_4)
summary(lm.4)
lm.5 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample)
summary(lm.5)
lm.5_5 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std+SR,ar.rate.sample)
summary(lm.5_5)
rm(lm.3,lm.3_3,lm.4,lm.4_4,lm.5,lm.5_5)
qplot(ar.rate.sample$SR)
lm.6 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore+Tomatometer,ar.rate.sample.sr)
lm.7 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample.sr)
lm.8 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg+cr_avg,ar.rate.sample.sr)
lm.9 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample.sr)
lm.10 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore+Tomatometer,ar.rate.sample.nsr)
lm.11 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample.nsr)
lm.12 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg+cr_avg,ar.rate.sample.nsr)
lm.13 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample.nsr)
summary(lm.6)
summary(lm.7)
summary(lm.8)
summary(lm.9)
summary(lm.10)
summary(lm.11)
summary(lm.12)
summary(lm.13)
ar.rate.sample.sr <- subset(ar.rate.sample, ar.rate.sample$SR==1)
ar.rate.sample.nsr <- subset(ar.rate.sample,ar.rate.sample$SR==0)
qplot(ar.rate.sample$SR)
lm.6 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore+Tomatometer,ar.rate.sample.sr)
lm.7 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample.sr)
lm.8 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg+cr_avg,ar.rate.sample.sr)
lm.9 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample.sr)
lm.10 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore+Tomatometer,ar.rate.sample.nsr)
lm.11 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample.nsr)
lm.12 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg+cr_avg,ar.rate.sample.nsr)
lm.13 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample.nsr)
summary(lm.6)
summary(lm.7)
summary(lm.8)
summary(lm.9)
summary(lm.10)
summary(lm.11)
summary(lm.12)
summary(lm.13)
describe(ar.rate.sample$SR)
ar.rate.sample$SR <- as.factor(ar.rate.sample$SR)
describe(ar.rate.sample$SR)
ar.rate.sample <- ar.rate[sample(1:1579439,10000),]
ar.rate.sample.sr <- subset(ar.rate.sample, ar.rate.sample$SR==1)
ar.rate.sample.nsr <- subset(ar.rate.sample,ar.rate.sample$SR==0)
rm(lm.6,lm.7,lm.8,lm.9,lm.10,lm.11,lm.12,lm.13)
lm.6 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore+Tomatometer,ar.rate.sample.sr)
lm.7 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample.sr)
lm.8 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg+cr_avg,ar.rate.sample.sr)
lm.9 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample.sr)
lm.10 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore+Tomatometer,ar.rate.sample.nsr)
lm.11 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample.nsr)
lm.12 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg+cr_avg,ar.rate.sample.nsr)
lm.13 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample.nsr)
summary(lm.6)
summary(lm.7)
summary(lm.8)
summary(lm.9)
summary(lm.10)
summary(lm.11)
summary(lm.12)
summary(lm.13)
qplot(ar.rate.sample$SR)
ar.rate.sample$SR <- as.factor(ar.rate.sample$SR)
describe(ar.rate.sample$SR)
rm(lm.6,lm.7,lm.8,lm.9,lm.10,lm.11,lm.12,lm.13)
lm.3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore_10+Tomatometer_10,ar.rate.sample)
lm.3_3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg_2+cr_avg,ar.rate.sample)
summary(lm.3_3)
lm.4 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample)
lm.4_4 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std+SR,ar.rate.sample)
summary(lm.4_4)
summary(lm.4)
lm.5 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample)
summary(lm.5)
lm.5_5 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std+SR,ar.rate.sample)
summary(lm.5_5)
ar.rate <- fread(file.path(path.output,"ra_rate_lm_addfreq.csv"))
ar.rate.sample <- ar.rate[sample(1:1579439,10000),]
ar.rate.sample.freq <- subset(ar.rate.sample.cleanfreq, ar.rate.sample.cleanfreq$prFrequent==1)
ar.rate.sample.nfreq <- subset(ar.rate.sample.cleanfreq,ar.rate.sample.cleanfreq$prFrequent==0)
ar.rate.sample.freq <- subset(ar.rate.sample, ar.rate.sample$prFrequent==1)
ar.rate.sample.nfreq <- subset(ar.rate.sample,ar.rate.sample$prFrequent==0)
lm.6 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore+Tomatometer,ar.rate.sample.freq)
lm.7 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample.freq)
lm.8 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg+cr_avg,ar.rate.sample.freq)
lm.9 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample.freq)
lm.10 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore+Tomatometer,ar.rate.sample.nfreq)
lm.11 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+Ascore_std+Tomatometer_std,ar.rate.sample.nfreq)
lm.12 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+ar_avg+cr_avg,ar.rate.sample.nfreq)
lm.13 <- lm(formula = Rate_std~ar_volume_cum_std+cr_volume_cum_std+ar_avg_std+cr_avg_std,ar.rate.sample.nfreq)
summary(lm.6)
summary(lm.7)
summary(lm.8)
summary(lm.9)
summary(lm.10)
summary(lm.11)
summary(lm.12)
summary(lm.13)
rm(lm.6,lm.7,lm.8,lm.9,lm.10,lm.11,lm.12,lm.13)
qplot(ar.rate.sample$prFrequent)
ar.rate.sample$Frequent <- as.factor(ar.rate.sample$prFrequent)
describe(ar.rate.sample$prFrequent)
save.image("D:/MicFile/百度云同步盘/R_Workspace/GraduateProject/DataAnalysis/3.RData")
lm.3 <- lm(formula = rate_2~ar_volume_cum+cr_volume_cum+Ascore_10+Tomatometer_10,ar.rate.sample)
summary(lm.3)
a <- 1
load("D:/MicFile/百度云同步盘/R_Workspace/R_LearningDemo/.RData")
clear()
b <- a
load("D:/MicFile/百度云同步盘/R_Workspace/R_LearningDemo/.RData")
y <- c(1,5,4,8,9,3)
x <- c('A','B','C','A','B','C')
quanthub = data.frame(y,x)
lm(y~x, data = quanthub)
model <- lm(y~x, data = quanthub)
lm
model
matrix(c(1,2,3,4,2,4,6,8),nrow = 4, ncol = 2)
my_fun <- function(x){
if (is.numeric(x)){
print('Yes')
}else{
print('No')
}
}
my_fun()
my_fun(3)
my_fun(as.character(3))
data("USAccDeaths")
USAccDeaths
mean(USAccDeaths$Jan)
mean(USAccDeaths)
mean(USAccDeaths[c('Jan')])
mean(USAccDeaths['Jan'])
colMeans(USAccDeaths)
data('precip')
precip
grepl(precip, ['i'])
grepl(precip, 'i')
pca = preProcess(x = USAccDeaths, method='pca', thresh=0.7, pcaComp=2)
library(pca)
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x=5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x
x <- floor(runif(1,1,6))
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x
x <- 1
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- 3
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- 4
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- 5
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
c(1,2,'2')
barplot(quanthub)
barplot(quanthub$x)
x <- floor(runif(1,1,6))
x <- 5
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- 1
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
x <- 2
if (any(1:5==x)||x==5) print('yes') else print('no')
if (1:5==x|x==5) print('yes') else print('no')
data('Nile')
Nile
max(Nile)
ma <- function(x,n=4){filter(x,rep(1/n,n), sides=1)}
ma(Nile)
max(ma(Nile))
