# scale_colour_stata()
plot3
print(plot3)
dev.off()
png(filename = file.path(path.output,"pictures", "3-sub-userratecount.png"),width = 650, height = 550, units = "px")
plot3 <- ggplot(ratecount_sub, aes(x = NumberOfRate,y = UserCount))
plot3 <- plot3 + geom_point(alpha=0.3,size = 3) +
geom_line(linetype = "dashed") +
labs(x = "评价次数", y = "用户数") +
ggtitle("大于二十次评价次数的用户评价次数分布图", element_text(size=30)) +
theme_stata() +
theme(plot.title = element_text(size = 17), axis.text=element_text(size=15),axis.title = element_text(size=15, vjust = -2),axis.title.y = element_text(vjust = -0.7))
# scale_colour_stata()
plot3
print(plot3)
dev.off()
png(filename = file.path(path.output,"pictures", "3-sub-userratecount.png"),width = 650, height = 550, units = "px")
plot3 <- ggplot(ratecount_sub, aes(x = NumberOfRate,y = UserCount))
plot3 <- plot3 + geom_point(alpha=0.3,size = 3) +
geom_line(linetype = "dashed") +
labs(x = "评价次数", y = "用户数") +
ggtitle("大于二十次评价次数的用户评价次数分布图", element_text(size=30)) +
theme_stata() +
theme(plot.title = element_text(size = 17), axis.text=element_text(size=15),axis.title = element_text(size=15, vjust = -2),axis.title.y = element_text(hjust = -0.5))
# scale_colour_stata()
plot3
print(plot3)
dev.off()
png(filename = file.path(path.output,"pictures", "3-sub-userratecount.png"),width = 650, height = 550, units = "px")
plot3 <- ggplot(ratecount_sub, aes(x = NumberOfRate,y = UserCount))
plot3 <- plot3 + geom_point(alpha=0.3,size = 3) +
geom_line(linetype = "dashed") +
labs(x = "评价次数", y = "用户数") +
ggtitle("大于二十次评价次数的用户评价次数分布图", element_text(size=30)) +
theme_stata() +
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title = element_text(size=15, vjust = -2),axis.title.y = element_text(hjust = -0.1))
# scale_colour_stata()
plot3
print(plot3)
dev.off()
png(filename = file.path(path.output,"pictures", "3-sub-userratecount.png"),width = 650, height = 550, units = "px")
plot3 <- ggplot(ratecount_sub, aes(x = NumberOfRate,y = UserCount))
plot3 <- plot3 + geom_point(alpha=0.3,size = 3) +
geom_line(linetype = "dashed") +
labs(x = "评价次数", y = "用户数") +
ggtitle("大于二十次评价次数的用户评价次数分布图", element_text(size=30)) +
theme_stata() +
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title = element_text(size=15, vjust = -2),axis.title.y = element_text(vjust = -2))
# scale_colour_stata()
plot3
print(plot3)
dev.off()
png(filename = file.path(path.output,"pictures", "3-sub-userratecount.png"),width = 650, height = 550, units = "px")
plot3 <- ggplot(ratecount_sub, aes(x = NumberOfRate,y = UserCount))
plot3 <- plot3 + geom_point(alpha=0.3,size = 3) +
geom_line(linetype = "dashed") +
labs(x = "评价次数", y = "用户数") +
ggtitle("大于二十次评价次数的用户评价次数分布图", element_text(size=30)) +
theme_stata() +
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title = element_text.x(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = -3))
# scale_colour_stata()
plot3
print(plot3)
dev.off()
png(filename = file.path(path.output,"pictures", "3-sub-userratecount.png"),width = 650, height = 550, units = "px")
plot3 <- ggplot(ratecount_sub, aes(x = NumberOfRate,y = UserCount))
plot3 <- plot3 + geom_point(alpha=0.3,size = 3) +
geom_line(linetype = "dashed") +
labs(x = "评价次数", y = "用户数") +
ggtitle("大于二十次评价次数的用户评价次数分布图", element_text(size=30)) +
theme_stata() +
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = -3))
# scale_colour_stata()
plot3
print(plot3)
dev.off()
png(filename = file.path(path.output,"pictures", "3-sub-userratecount.png"),width = 650, height = 550, units = "px")
plot3 <- ggplot(ratecount_sub, aes(x = NumberOfRate,y = UserCount))
plot3 <- plot3 + geom_point(alpha=0.3,size = 3) +
geom_line(linetype = "dashed") +
labs(x = "评价次数", y = "用户数") +
ggtitle("大于二十次评价次数的用户评价次数分布图", element_text(size=30)) +
theme_stata() +
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = -5))
# scale_colour_stata()
plot3
print(plot3)
dev.off()
png(filename = file.path(path.output,"pictures", "4-datelength0ratecount.png"),width = 650, height = 550, units = "px")
plot4 = ggplot(rateage_sub, aes(x = datelength, y = usercount))
plot4 = plot4 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("大于十次评价次数的用户评价历史时长分布图", element_text(size=30)) +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = -5))
# theme_solarized_2()
# theme_wsj()
print(plot4)
dev.off()
plot4 = ggplot(rateage_sub, aes(x = datelength, y = usercount))
plot4 = plot4 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("大于十次评价次数的用户评价历史时长分布图", element_text(size=30)) +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = -5))
# theme_solarized_2()
# theme_wsj()
plot4
describe(rateage_sub)
png(filename = file.path(path.output,"pictures", "4-datelength0ratecount.png"),width = 650, height = 550, units = "px")
plot4 = ggplot(rateage_sub, aes(x = datelength, y = usercount))
plot4 = plot4 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("大于十次评价次数的用户评价历史时长分布图", element_text(size=30)) +
labs(x = "评价历史（日）", y = "用户数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
print(plot4)
dev.off()
png(filename = file.path(path.output,"pictures", "4-datelength0ratecount.png"),width = 650, height = 550, units = "px",res = NA)
plot4 = ggplot(rateage_sub, aes(x = datelength, y = usercount))
plot4 = plot4 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("大于十次评价次数的用户评价历史时长分布图", element_text(size=30)) +
labs(x = "评价历史（日）", y = "用户数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
print(plot4)
dev.off()
user.sample <- user.sub[sample(1:dim(user.sub)[1],500),]
attach(user.sample)
ratecount_sample <- aggregate(UID ~ num_of_rate, FUN = length)
rateage_sample = aggregate(UID~datelength,FUN = length)
colnames(rateage_sample) <- c("datelength","usercount")
colnames(ratecount_sample) <- c("NumberOfRate","UserCount")
detach(user.sample)
detach(ar.rate)
attach(user.sample)
ratecount_sample <- aggregate(UID ~ num_of_rate, FUN = length)
rateage_sample = aggregate(UID~datelength,FUN = length)
colnames(rateage_sample) <- c("datelength","usercount")
colnames(ratecount_sample) <- c("NumberOfRate","UserCount")
detach(user.sample)
plot5 <- ggplot(ratecount_sample, aes(x = NumberOfRate,y = UserCount))
plot5 <- plot5 + geom_point(alpha=0.3,size = 3) +
geom_line(linetype = "dashed") +
ggtitle("抽样用户评价次数分布图") +
# scale_colour_stata()
theme_stata()
plot5
plot6 = ggplot(rateage_sample, aes(x = datelength, y = usercount))
plot6 = plot6 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("抽样用户评价历史时长分布图") +
geom_line(linetype = "dashed") +
theme_stata()
# theme_solarized_2()
# theme_wsj()
plot6
png(filename = file.path(path.output,"pictures","sub20", "4-datelength0ratecount.png"),width = 650, height = 550, units = "px",res = NA)
plot5 <- ggplot(ratecount_sample, aes(x = NumberOfRate,y = UserCount))
plot5 <- plot5 + geom_point(alpha=0.3,size = 3) +
labs(x = "评价历史（日）", y = "用户数") +
geom_line(linetype = "dashed") +
ggtitle("抽样用户评价次数分布图",element_text(size=30)) +
# scale_colour_stata()
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))+
plot5
plot5 <- ggplot(ratecount_sample, aes(x = NumberOfRate,y = UserCount))
plot5 <- plot5 + geom_point(alpha=0.3,size = 3) +
labs(x = "评价次数", y = "用户数") +
geom_line(linetype = "dashed") +
ggtitle("抽样用户评价次数分布图",element_text(size=30)) +
# scale_colour_stata()
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))+
plot5
plot5 <- ggplot(ratecount_sample, aes(x = NumberOfRate,y = UserCount))
plot5 <- plot5 + geom_point(alpha=0.3,size = 3) +
labs(x = "评价次数", y = "用户数") +
geom_line(linetype = "dashed") +
ggtitle("抽样用户评价次数分布图",element_text(size=30)) +
# scale_colour_stata()
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot5
dev.off()
plot5 <- ggplot(ratecount_sample, aes(x = NumberOfRate,y = UserCount))
plot5 <- plot5 + geom_point(alpha=0.3,size = 3) +
labs(x = "评价次数", y = "用户数") +
geom_line(linetype = "dashed") +
ggtitle("抽样用户评价次数分布图",element_text(size=30)) +
# scale_colour_stata()
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot5
plot5 <- ggplot(ratecount_sample, aes(x = NumberOfRate,y = UserCount))
plot5 <- plot5 + geom_point(alpha=0.3,size = 3) +
labs(x = "评价次数", y = "用户数") +
geom_line(linetype = "dashed") +
ggtitle("抽样用户评价次数分布图",element_text(size=30)) +
# scale_colour_stata()
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot5
png(filename = file.path(path.output,"pictures","sub20", "4-datelength0ratecount.png"),width = 650, height = 550, units = "px",res = NA)
plot4 = ggplot(rateage_sub, aes(x = datelength, y = usercount))
plot4 = plot4 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("大于十次评价次数的用户评价历史时长分布图", element_text(size=30)) +
labs(x = "评价历史（日）", y = "用户数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
print(plot4)
dev.off()
png(filename = file.path(path.output,"pictures","sub20", "4-datelength0ratecount.png"),width = 650, height = 550, units = "px",res = NA)
plot4 = ggplot(rateage_sub, aes(x = datelength, y = usercount))
plot4 = plot4 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("大于二十次评价次数的用户评价历史时长分布图", element_text(size=30)) +
labs(x = "评价历史（日）", y = "用户数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=14),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
print(plot4)
dev.off()
png(filename = file.path(path.output,"pictures","sub20", "5-sub-userrateagecount.png"),width = 650, height = 550, units = "px",res = NA)
plot5 <- ggplot(ratecount_sample, aes(x = NumberOfRate,y = UserCount))
plot5 <- plot5 + geom_point(alpha=0.3,size = 3) +
labs(x = "评价次数", y = "用户数") +
geom_line(linetype = "dashed") +
ggtitle("抽样用户评价次数分布图",element_text(size=30)) +
# scale_colour_stata()
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
plot5
print(plot5)
dev.off()
png(filename = file.path(path.output,"pictures","sub20", "6-sampleratecountdistri.png"),width = 650, height = 550, units = "px",res = NA)
plot6 = ggplot(rateage_sample, aes(x = datelength, y = usercount))
plot6 = plot6 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("抽样用户评价历史时长分布图",element_text(size=30)) +
labs(x = "评价历史（日）", y = "用户数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
plot6
print(plot6)
dev.off()
write.csv(user.sample,file.path(path.output,"userinfo_sample_2.csv"),row.names = F)
user.sample.list <- subset(user.sample,select = c("UID","Index"))
ar.rate.input <- left_join(user.sample.list,ar.rate, by = "UID")
fix(ar.rate.input)#change index to userindex
write.csv(ar.rate.input,file.path(path.output,"ar_rate_input_2.csv"),row.names = F)
qplot(ar.rate.input$MID)
attach(ar.rate.input)
moviecount <- aggregate(UID~MID, FUN = length)
movieascore <- aggregate(Ascore~MID, FUN = mean)
movietomatometer <- aggregate(Tomatometer~MID, FUN = mean)
movie.sample.info <- left_join(movieascore,moviecount,by = "MID")
movie.sample.info <- left_join(movie.sample.info, movietomatometer,by = "MID")
fix(movie.sample.info)
write.csv(movie.sample.info,file.path(path.output,"movieinfo_sample_2.csv"),row.names = F)
rm(moviecount,movieascore,movietomatometer)
qplot(movie.sample.info$MID,movie.sample.info$Ascore)
qplot(movie.sample.info$MID,movie.sample.info$Tomatometer)
detach(ar.rate.input)
attach(movie.sample.info)
countdistri <- aggregate(MID~RateCount,FUN = length)
ascoredistri <- aggregate(MID~Ascore, FUN = length)
Tomatometerdistri <- aggregate(MID~Tomatometer, FUN = length)
fix(movie.sample.info)
write.csv(movie.sample.info,file.path(path.output,"movieinfo_sample_2.csv"),row.names = F)
detach(movie.sample.info)
attach(movie.sample.info)
countdistri <- aggregate(MID~RateCount,FUN = length)
ascoredistri <- aggregate(MID~Ascore, FUN = length)
Tomatometerdistri <- aggregate(MID~Tomatometer, FUN = length)
fix(Tomatometerdistri)
fix(Tomatometerdistri)
fix(ascoredistri)
fix(Tomatometerdistri)
fix(countdistri)
png(filename = file.path(path.output,"pictures","sub20", "12-samplemovieascore.png"),width = 650, height = 550, units = "px",res = NA)
plot7 = ggplot(countdistri, aes(x = RateCount, y = Amount))
plot7 = plot7 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("抽样电影评分活跃度分布图",element_text(size=30)) +
labs(x = "评分数量", y = "电影数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
plot7
print(plot7)
dev.off()
png(filename = file.path(path.output,"pictures","sub20", "14-samplemovie_ratecountdis.png"),width = 650, height = 550, units = "px",res = NA)
plot7 = ggplot(countdistri, aes(x = RateCount, y = Amount))
plot7 = plot7 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("抽样电影评分活跃度分布图",element_text(size=30)) +
labs(x = "评分数量", y = "电影数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
plot7
print(plot7)
dev.off()
png(filename = file.path(path.output,"pictures","sub20", "15-sampemovie_ascoredis.png"),width = 650, height = 550, units = "px",res = NA)
plot8 = ggplot(ascoredistri, aes(x = Ascore, y = Amount))
plot8 = plot8 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("抽样电影Ascore分布图",element_text(size=30)) +
labs(x = "Ascore", y = "电影数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
plot8
print(plot8)
dev.off()
png(filename = file.path(path.output,"pictures","sub20", "16-samplemovie_tomatometerdis.png"),width = 650, height = 550, units = "px",res = NA)
plot9 = ggplot(Tomatometerdistri, aes(x = Tomatometer, y = Amount))
plot9 = plot9 + geom_point(alpha=0.2,size = 2.5) +
ggtitle("抽样电影Tomatometer分布图",element_text(size=30)) +
labs(x = "Tomatometer", y = "电影数") +
geom_line(linetype = "dashed") +
theme_stata()+
theme(plot.title = element_text(size = 17), axis.text=element_text(size=10),axis.title.x = element_text(size=15, vjust = -2),axis.title.y = element_text(size=15,vjust = 3))
# theme_solarized_2()
# theme_wsj()
print(plot9)
dev.off()
detach(movie.sample.info)
ar.rate.rate <- data.frame(UID = ar.rate.input$UID,MID = ar.rate.input$MID,Rate = ar.rate.input$Rate)
ar.rate.ar <- data.frame(UID = ar.rate.input$UID,MID = ar.rate.input$MID,Ascore = ar.rate.input$Ascore)
ar.rate.cr <- data.frame(UID = ar.rate.input$UID,MID = ar.rate.input$MID,Tomatometer = ar.rate.input$Tomatometer)
qplot(ar.rate.ar$Ascore)
describe(ar.rate.rate$Rate)
qplot(ar.rate.cr$Tomatometer)
qplot(ar.rate.rate$Rate)
describe(movie.sample.info)
qplot(ar.rate.cr$Tomatometer)
qplot(ar.rate.rate$Rate)
ar.rate.ar$Ascore = ar.rate.ar$Ascore * 5
ar.rate.cr$Tomatometer = ar.rate.cr$Tomatometer * 5
qplot(ar.rate.ar$Ascore)
ar.input_rate <- spread(ar.rate.rate, MID, Rate, fill = 0)
ar.input_ascore <- spread(ar.rate.ar, MID, Ascore, fill = NA)
ar.input_Tomatometer <- spread(ar.rate.cr, MID, Tomatometer, fill = NA)
head(melt(ar.input_rate))
head(gather(ar.input_rate))
ar.input_userlist <- data.frame(UID = ar.input_rate$UID)
write.csv(ar.input_userlist,file.path(path.output,"ar_rate_input_userlist.csv"),row.names = F)
ar.input_rate <- ar.input_rate[,-1]
head(gather(ar.input_rate))
describe(gather(ar.input_rate))
View(ar.input_rate)
View(ar.input_ascore)
View(ar.input_userlist)
ar.input_rate_gather = gather(ar.input_rate)
describe(ar.input_rate_gather)
ar.input_ascore <- ar.input_ascore[,-1]
ar.input_Tomatometer <- ar.input_Tomatometer[,-1]
colnamelist <- data.frame(colname = as.numeric(colnames(ar.input_ascore)))
colnamelist2 <- data.frame(colname = as.numeric(colnames(ar.input_Tomatometer)))
dim(full_join(colnamelist,colnamelist2))
rm(colnamelist2)
movieid = colnamelist[1,1]
insert.ascore = movielastdate[movielastdate$MID == movieid,][,4]
movielastdate[movielastdate$MID == movieid,]
insert.ascore = movielastdate[movielastdate$MID == movieid,][["Ascore"]]
insert.tomatometer = movielastdate[movielastdate$MID == movieid,][["Tomatometer"]]
View(ar.input_ascore)
ar.input_ascore[[paste(movieid)]]
dim(ar.input_ascore[[paste(movieid)]])
View(ar.input_ascore)
impute(ar.input_ascore[[paste(movieid)]],insert.ascore)
ar.input_ascore$paste(movieid)
ar.input_ascore$movieid
ar.input_ascore.impute <- data.frame()
ar.input_ascore.impute <- cbind(ar.input_ascore.imput,impute(ar.input_ascore$movieid,insert.ascore))
ar.input_ascore.impute <- cbind(ar.input_ascore.impute,impute(ar.input_ascore$movieid,insert.ascore))
View(ar.input_ascore.impute)
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,paste(movieid) = impute(ar.input_ascore$movieid,insert.ascore))
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,impute(ar.input_ascore$movieid,insert.ascore))
impute(ar.input_ascore[[movieid]],insert.ascore)
ar.input_ascore.impute <- cbind(ar.input_ascore.impute,impute(ar.input_ascore[[movieid]],insert.ascore))
ar.input_ascore.impute <- ar.input_userlist
ar.input_ascore.impute <- cbind(ar.input_ascore.impute,impute(ar.input_ascore[[movieid]],insert.ascore))
View(ar.input_ascore.impute)
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,a = impute(ar.input_ascore[[movieid]],insert.ascore))
write.csv(ar.input_rate,file.path(path.output,"model_input_rate.csv"),row.names = F)
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,a = impute(ar.input_ascore[[movieid]],insert.ascore))
ar.input_ascore.impute <- ar.input_userlist
ar.input_tomatometer.impute <- ar.input_userlist
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,a = impute(ar.input_ascore[[movieid]],insert.ascore))
ar.input_tomatometer.impute <- data.frame(ar.input_tomatometer.impute,a = impute(ar.input_Tomatometer[[movieid]],insert.tomatometer))
View(ar.input_tomatometer.impute)
colinsert.ascore <- dataframe(a = impute(ar.input_ascore[[movieid]],insert.ascore))
colinsert.ascore <- data.frame(a = impute(ar.input_ascore[[movieid]],insert.ascore))
class(colinsert.ascore)
class(colinsert.ascore$a)
class(colinsert.ascore$a) <- "num"
rm(colinsert.ascore)
ar.input_ascore.impute <- ar.input_userlist
ar.input_tomatometer.impute <- ar.input_userlist
for (j in 1:dim(ar.input_ascore)[2])
movieid <- colnamelist[j,1]
insert.ascore <- movielastdate[movielastdate$MID == movieid,][["Ascore"]]*5
insert.tomatometer <- movielastdate[movielastdate$MID == movieid,][["Tomatometer"]]*5
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,a = impute(ar.input_ascore[[movieid]],insert.ascore))
ar.input_tomatometer.impute <- data.frame(ar.input_tomatometer.impute,a = impute(ar.input_Tomatometer[[movieid]],insert.tomatometer))
print(j)
movieid
ar.input_ascore[[2554]]
for (i in colnamelist)
movieid <- i
insert.ascore <- movielastdate[movielastdate$MID == movieid,][["Ascore"]]*5
insert.tomatometer <- movielastdate[movielastdate$MID == movieid,][["Tomatometer"]]*5
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,a = impute(ar.input_ascore[[movieid]],insert.ascore))
ar.input_tomatometer.impute <- data.frame(ar.input_tomatometer.impute,a = impute(ar.input_Tomatometer[[movieid]],insert.tomatometer))
for (i in colnamelist)
print(i)
ar.input_ascore[[2191]]
describe(colnamelist)
ar.input_ascore[["2554"]]
paste(movieid)
1:dim(ar.input_ascore)[2]
for (i in 1:dim(ar.input_ascore)[2])
i
movieid <- colnamelist[i,1]
movieid
for (i in 1:dim(ar.input_ascore)[2]){
i
movieid <- colnamelist[i,1]
movieid
insert.ascore <- movielastdate[movielastdate$MID == movieid,][["Ascore"]]*5
insert.tomatometer <- movielastdate[movielastdate$MID == movieid,][["Tomatometer"]]*5
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,a = impute(ar.input_ascore[[paste(movieid)]],insert.ascore))
ar.input_tomatometer.impute <- data.frame(ar.input_tomatometer.impute,a = impute(ar.input_Tomatometer[[paste(movieid)]],insert.tomatometer))
}
View(ar.input_ascore.impute)
impute(ar.input_ascore[[paste(movieid)]],insert.ascore)
ar.input_ascore[[paste(movieid)]]
View(ar.input_ascore)
View(colnamelist)
impute(ar.input_ascore[[paste(movieid)]],0)
unique(movielastdate,by = "MID")
dim(unique(movielastdate,by = "MID"))
movielastdate <-unique(movielastdate,by = "MID")
write.csv(movielastdate,file.path(path.output,"movielastdateinfo_whole.csv"),row.names = F)
ar.input_ascore.impute <- ar.input_userlist
ar.input_tomatometer.impute <- ar.input_userlist
for (i in 1:dim(ar.input_ascore)[2]){
movieid <- colnamelist[i,1]
insert.ascore <- movielastdate[movielastdate$MID == movieid,][["Ascore"]]*5
insert.tomatometer <- movielastdate[movielastdate$MID == movieid,][["Tomatometer"]]*5
ar.input_ascore.impute <- data.frame(ar.input_ascore.impute,a = impute(ar.input_ascore[[paste(movieid)]],insert.ascore))
ar.input_tomatometer.impute <- data.frame(ar.input_tomatometer.impute,a = impute(ar.input_Tomatometer[[paste(movieid)]],insert.tomatometer))
}
ar.input_ascore.impute <- ar.input_ascore.impute[,-1]
ar.input_tomatometer.impute <- ar.input_tomatometer.impute[,-1]
colnames(ar.input_ascore.impute)
colnames(ar.input_ascore.impute) <- colnamelist$colname
colnames(ar.input_tomatometer.impute) <- colnamelist$colname
View(ar.input_ascore.impute)
library(data.table)
library(Hmisc)
library(dplyr)
library(tidyr)
library(VIM)
library(reshape2)
library(ggplot2)
library(ggthemes)
describe(ar.input_ascore.impute)
write.csv(ar.input_rate,file.path(path.output,"model_input_rate_2.csv"),row.names = F)
write.csv(ar.input_ascore.impute,file.path(path.output,"model_input_ar_2.csv"),row.names = F)
write.csv(ar.input_tomatometer.impute,file.path(path.output,"model_input_cr_2.csv"),row.names = F)
cor.test(ar.rate$Ascore,ar.rate$Tomatometer)
ar.input_rate.na <- spread(ar.rate.rate,MID,Rate,fill = NA)
library(dplyr)
library(tidyr)
ar.input_rate.na <- spread(ar.rate.rate,MID,Rate,fill = NA)
View(ar.input_rate.na)
View(ar.input_rate)
ar.input_rate.na <- ar.input_rate.na[,-1]
write.csv(ar.input_rate.na, file.path(path.output,"model_input_rate_na.csv"),row.names = F)
t.test(ar.rate.input$ml_ar_avg, ar.rate.input$ar_avg)
cor.test(ar.rate.input$ml_ar_avg, ar.rate.input$ar_avg)
View(ar.rate.cr)
library(data.table)
library(Hmisc)
library(dplyr)
library(tidyr)
library(VIM)
library(reshape2)
ar.rate.wtsni <- subset(ar.rate, ar.rate$Rate>-3&ar.rate$Rate<0)
describe(ar.rate$Rate)
describe(ar.rate$Rate)
rm(ar.rate.wtsni)
save.image("D:/MicFile/百度云同步盘/R_Workspace/GraduateProject/DataProcessing/dataprocessingws.RData")
